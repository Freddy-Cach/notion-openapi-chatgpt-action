{
  "openapi": "3.0.1",
  "info": {
    "title": "Notion API",
    "description": "Always: search → retrieve/query → update with canonical page_id.",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.notion.com/v1"
    }
  ],
  "paths": {
    "/blocks/{block_id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "deleteBlock",
        "summary": "Delete Block"
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "retrieveBlock",
        "summary": "Retrieve Block"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateBlock",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUpdate"
              }
            }
          }
        },
        "summary": "Update Block"
      }
    },
    "/blocks/{block_id}/children": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "listBlockChildren",
        "summary": "List Block Children"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "children"
                ],
                "properties": {
                  "children": {
                    "$ref": "#/components/schemas/BlockChildren"
                  }
                }
              }
            }
          }
        },
        "operationId": "appendBlockChildren",
        "summary": "Append Block Children"
      }
    },
    "/databases": {
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "operationId": "createDatabase",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseCreate"
              }
            }
          }
        },
        "summary": "Create Database"
      }
    },
    "/databases/{database_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found or not queryable (inline?)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "object": "error",
                  "code": "object_not_found",
                  "message": "Database not found or not shared with integration."
                }
              }
            }
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "database_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "retrieveDatabase",
        "summary": "Retrieve Database"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found or not queryable (inline?)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "object": "error",
                  "code": "object_not_found",
                  "message": "Database not found or not shared with integration."
                }
              }
            }
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "database_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "updateDatabase",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseUpdate"
              }
            }
          }
        },
        "summary": "Update Database"
      }
    },
    "/databases/{database_id}/query": {
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Database not found or not queryable (inline?)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "object": "error",
                  "code": "object_not_found",
                  "message": "Database not found or not shared with integration."
                }
              }
            }
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "database_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "queryDatabase",
        "summary": "Query Database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseQuery"
              },
              "examples": {
                "nameContainsTango": {
                  "value": {
                    "filter": {
                      "property": "Name",
                      "text": {
                        "contains": "Tango"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "⚠️ Do **not** call this endpoint if the retrieved database's `is_inline` value is true. Use `next_cursor` for paging."
      }
    },
    "/pages": {
      "post": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "operationId": "createPage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageCreate"
              }
            }
          }
        },
        "summary": "Create Page"
      }
    },
    "/pages/{page_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de página CANÓNICO (obtenido con pages.retrieve), ej: \"a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6\"",
            "example": "a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6"
          }
        ],
        "operationId": "retrievePage",
        "summary": "Retrieve Page"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de página CANÓNICO (obtenido con pages.retrieve), ej: \"a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6\"",
            "example": "a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6"
          }
        ],
        "operationId": "updatePage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageUpdate"
              },
              "examples": {
                "updateWithEmoji": {
                  "value": {
                    "page_id": "<real.id>",
                    "icon": {
                      "type": "emoji",
                      "emoji": "🎯"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update Page"
      }
    },
    "/pages/{page_id}/properties/{property_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "description": "Default response"
          }
        },
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de página CANÓNICO (obtenido con pages.retrieve), ej: \"a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6\"",
            "example": "a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6"
          },
          {
            "name": "property_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getPageProperty",
        "summary": "Get Page Property"
      }
    },
    "/search": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation error (malformed or over-size search payload)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "object": "error",
                  "code": "validation_error",
                  "message": "Invalid search payload"
                }
              }
            }
          },
          "default": {
            "description": "Default response"
          }
        },
        "operationId": "search",
        "summary": "Search",
        "description": "Usa este endpoint sólo para encontrar candidatos. NO confíes en el ID devuelto para actualizar iconos."
      }
    }
  },
  "components": {
    "schemas": {
      "PageUpdate": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": true
          },
          "archived": {
            "type": "boolean"
          },
          "icon": {
            "$ref": "#/components/schemas/IconObject"
          },
          "cover": {
            "$ref": "#/components/schemas/FileExternal"
          }
        }
      },
      "PageCreate": {
        "type": "object",
        "required": [
          "parent",
          "properties"
        ],
        "properties": {
          "parent": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string",
                "format": "uuid"
              },
              "database_id": {
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "workspace"
                ]
              },
              "workspace": {
                "type": "boolean",
                "description": "Only supported for public integrations with insert_content capability"
              }
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "title": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "additionalProperties": true
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "icon": {
            "$ref": "#/components/schemas/IconObject"
          },
          "cover": {
            "$ref": "#/components/schemas/FileExternal"
          }
        }
      },
      "DatabaseCreate": {
        "type": "object",
        "required": [
          "parent",
          "title",
          "properties"
        ],
        "properties": {
          "parent": {
            "type": "object",
            "required": [
              "type",
              "page_id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "page_id"
                ]
              },
              "page_id": {
                "type": "string"
              }
            }
          },
          "title": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "text"
                  ]
                },
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "type",
                "text"
              ]
            }
          },
          "icon": {
            "$ref": "#/components/schemas/IconObject"
          },
          "cover": {
            "$ref": "#/components/schemas/FileExternal"
          },
          "properties": {
            "$ref": "#/components/schemas/DatabasePropertyCreate"
          }
        }
      },
      "DatabaseUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "text"
                  ]
                },
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "type",
                "text"
              ]
            }
          },
          "properties": {
            "type": "object",
            "additionalProperties": true
          },
          "icon": {
            "$ref": "#/components/schemas/IconObject"
          },
          "cover": {
            "$ref": "#/components/schemas/FileExternal"
          }
        }
      },
      "IconObject": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "emoji",
              "external"
            ]
          },
          "emoji": {
            "type": "string"
          },
          "external": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "FileExternal": {
        "type": "object",
        "required": [
          "type",
          "external"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "external"
            ]
          },
          "external": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "DatabasePropertyCreate": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "description": "Any single property object allowed by Notion."
      },
      "BlockChildren": {
        "type": "array",
        "description": "Children cannot include a child_database block. Use the database creation endpoint instead.",
        "items": {
          "$ref": "#/components/schemas/Block"
        }
      },
      "BlockUpdate": {
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "callout": {
            "type": "object",
            "properties": {
              "icon": {
                "$ref": "#/components/schemas/IconObject"
              }
            }
          }
        }
      },
      "Block": {
        "type": "object",
        "required": [
          "object",
          "id"
        ],
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "block"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "block_data": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "DatabaseQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "object",
            "additionalProperties": true
          },
          "sorts": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "start_cursor": {
            "type": "string"
          },
          "page_size": {
            "type": "integer",
            "maximum": 100
          }
        },
        "additionalProperties": false
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "sort": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "query"
        ],
        "minProperties": 1
      },
      "Error": {
        "type": "object",
        "required": [
          "object",
          "status",
          "code",
          "message"
        ],
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "error"
            ]
          },
          "status": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
